{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortBy","sortTypeKey","reset","this","shouldShowReset","className","type","cn","ALPHABET","onClick","LENGTH","goods","visibleGoods","sort","firstItem","secondItem","localeCompare","length","getReorderedGoods","map","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgBE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBARzB,EAYEK,OAAS,SAACC,GACR,EAAKF,UAAS,iBAAO,CACnBH,SAAUK,OAdhB,EAkBEC,MAAQ,WACN,EAAKH,UAAS,iBAAO,CACnBJ,YAAY,EACZC,SAAUL,EAASM,UArBzB,4CAyBE,WAAU,IAAD,OA2BP,EAAiCM,KAAKT,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdQ,EAAkBT,GAAcC,IAAaL,EAASM,KAE5D,OACE,sBAAKQ,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYX,IAAaL,EAASiB,WAEpCC,QAAS,kBAAM,EAAKT,OAAOT,EAASiB,WALtC,iCAUA,wBACEF,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYX,IAAaL,EAASmB,SAEpCD,QAAS,kBAAM,EAAKT,OAAOT,EAASmB,SALtC,4BAUA,wBACEJ,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAaZ,IAEfc,QAASN,KAAKL,QALhB,qBAUCM,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVI,QAASN,KAAKD,MAHhB,sBAUJ,6BAzEsB,SACxBS,EADwB,GAGpB,IADFf,EACC,EADDA,SAAUD,EACT,EADSA,WAENiB,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQnB,GACN,KAAKL,EAASiB,SACZ,OAAOM,EAAUE,cAAcD,GAEjC,KAAKxB,EAASmB,OACZ,OAAOI,EAAUG,OAASF,EAAWE,OAEvC,QACE,OAAO,MAITtB,GACFiB,EAAad,UAGRc,EAmDFM,CACC1B,EACA,CAAEI,WAAUD,eACZwB,KAAI,SAACC,GAAD,OACJ,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eAxGpC,GAAyBC,IAAMC,WC/B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.813bd774.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortBy = (sortTypeKey: SortType) => {\n    this.setState(() => ({\n      sortType: sortTypeKey,\n    }));\n  };\n\n  reset = () => {\n    this.setState(() => ({\n      isReversed: false,\n      sortType: SortType.NONE,\n    }));\n  };\n\n  render() {\n    const getReorderedGoods = (\n      goods: string[],\n      { sortType, isReversed }: ReorderOptions,\n    ) => {\n      const visibleGoods = [...goods];\n\n      visibleGoods.sort((firstItem, secondItem) => {\n        switch (sortType) {\n          case SortType.ALPHABET:\n            return firstItem.localeCompare(secondItem);\n\n          case SortType.LENGTH:\n            return firstItem.length - secondItem.length;\n\n          default:\n            return 0;\n        }\n      });\n\n      if (isReversed) {\n        visibleGoods.reverse();\n      }\n\n      return visibleGoods;\n    };\n\n    const { isReversed, sortType } = this.state;\n    const shouldShowReset = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={() => this.sortBy(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={() => this.sortBy(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {shouldShowReset && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {getReorderedGoods(\n            goodsFromServer,\n            { sortType, isReversed },\n          ).map((item) => (\n            <li data-cy=\"Good\" key={item}>\n              {item}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}